#!/usr/bin/python3

# Script: Ops 401 Class 32 script
# Author: Paul Stroud
# Date of latest revision: 05/31/23
# Purpose: Signature-based Malware Detection Part 2 of 3
# Resources used: google, stackoverflow, github demo, chatgpt

# MAIN REQS:
# Continue developing your Python malware detection tool.
# Alter your search code to recursively scan each file and folder in the user input directory path and print it to the screen.
# For each file scanned within the scope of your search directory:
#   Generate the fileâ€™s MD5 hash using Hashlib.
#   Assign the MD5 hash to a variable.
#   Print the variable to the screen along with a timestamp, file name, file size, and complete (not symbolic) file path.




import platform # to get OS name
import os       # for os.walk() recursive directory list
import glob     # to search for files in a dir using a filename pattern
import hashlib
import datetime


def sha1_chksum(fname):
    shaka = hashlib.sha1()  # sha1 hash for the file
    with open(fname, 'rb') as file:
         slice = 0
         while slice != b'':
              slice = file.read(65536)
              shaka.update(slice)
    return shaka.hexdigest()


os_name = platform.system()   # get the OS name
if not (os_name == "Linux" or os_name == "Windows"):
    print("ERROR: Unknown OS. Exiting...")  # doesn't like apples
print(f"OS = {os_name}")

#pwd = os.getcwd()
#input(pwd)

# user input block
#pattern_str = input("Enter space-separated file patterns (default='*.exe') : ")
#pattern_str = '*.exe' if pattern_str == '' else pattern_str
pattern_str = '*.txt *.log'
pattern_list = pattern_str.split(" ")   # extract each file pattern from the string

#dir = input("Enter the directory to search (current directory if empty) : ")
dir = "/home/user/TEST/"
dir = dir if dir != '' else os.getcwd()




total_files = 0     # all files in the dir/subdirs
match_list = []  # list of files that match our pattern(s)

for rootdir, subdirs, files in os.walk(dir):    # recursively parse the dir
        print(rootdir)
        total_files += len(files)       # count all files
        for pattern in pattern_list:    # apply each filename pattern
            matches_here = glob.glob(rootdir + "/" + pattern)  # find matches in current dir
            match_list += matches_here  # add them to our list (if any)

print(f"\nSHA1 checksums for all files in the {dir}:")
hash_array = []
for i in range(len(match_list)): 
    #if dir == '.': match_list[i] = pwd + match_list[i][1:]
    cur_time = datetime.datetime.now().strftime("%Y%m%d %H:%M:%S")
    hash_array.append([cur_time, sha1_chksum(match_list[i]), match_list[i]])
#print(match_list)

columns = [ "DATE/TIME", "SHA1 HASH", "FILE LOCATION" ]
field1 = len(hash_array[0][0]) + 5
field2 = len(hash_array[0][1]) + 5
format_string = "{{:<{}}}:{{:<{}}}:{}"
output = f"{columns[0]:<{field1}}{columns[1]:<{field2}}{columns[2]}"
print(output)

for i in hash_array:
    output = format_string.format(field1, field2, i[0], i[1], i[2])
    output = f"{{:<{field1}}}{{:<{field2}}}{{}}".format(i[0], i[1], i[2])
    print(output)

# more numbers
print("\nScript stats")
print(f'   total files:\t\t{total_files}\n')
#       f'   matched files:\t{len(match_list)}')


# le end