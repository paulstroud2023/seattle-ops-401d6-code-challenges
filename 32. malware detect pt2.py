#!/usr/bin/python3

# Script: Ops 401 Class 32 script
# Author: Paul Stroud
# Date of latest revision: 05/31/23
# Purpose: Signature-based Malware Detection Part 2 of 3
# Resources used: google, stackoverflow, github demo, chatgpt

# MAIN REQS:
# Continue developing your Python malware detection tool.
#   Alter your search code to recursively scan each file and folder in the user input directory path and print it to the screen.
#   For each file scanned within the scope of your search directory:
#   Generate the fileâ€™s MD5 hash using Hashlib.
#   Assign the MD5 hash to a variable.
#   Print the variable to the screen along with a timestamp, file name, file size, and complete (not symbolic) file path.




import platform # to get OS name
import os       # for os.walk() recursive directory list
import glob     # to search for files in a dir using a filename pattern


os_name = platform.system()   # get the OS name
if not (os_name == "Linux" or os_name == "Windows"):
    print("ERROR: Unknown OS. Exiting...")  # doesn't like apples
print(f"OS = {os_name}")

# user input block
pattern_str = input("Enter space-separated file patterns (default='*.exe') : ")
pattern_str = '*.exe' if pattern_str == '' else pattern_str
pattern_list = pattern_str.split(" ")   # extract each file pattern from the string

dir = input("Enter the directory to search (current directory if empty) : ")
dir = '.' if dir == '' else dir




total_files = 0     # all files in the dir/subdirs
matched_files = []  # list of files that match our pattern(s)

for rootdir, subdirs, files in os.walk(dir):    # recursively parse the dir
        total_files += len(files)       # count all files
        for pattern in pattern_list:    # apply each filename pattern
            current_matched_files = glob.glob(rootdir + "/" + pattern)  # find matches in current dir
            matched_files += current_matched_files  # add them to our list (if any)

# print all files that matched the pattern(s)
print("\nFiles found:")
for i in matched_files: print("   ", i, sep='')

# more numbers
print("\tScript stats")
print(f'   total files:\t\t{total_files}\n' \
      f'   matched files:\t{len(matched_files)}')


# le end